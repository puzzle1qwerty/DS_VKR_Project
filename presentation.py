import streamlit as st


def presentation_page():
    st.title("Презентация проекта")

    # Состояние для управления слайдами
    if 'slide' not in st.session_state:
        st.session_state.slide = 0

    # Содержание слайдов

    slides = [
        """
        ## Прогнозирование отказов оборудования

        **Автор**: Волков Иван Александрович
        """,

        """
        ## Цель проекта:
        Разработать модель машинного обучения, которая предсказывает, произойдет ли отказ
        оборудования (Target = 1) или нет (Target = 0)
        ## Параметры датасета:
        Содержит  синтетические данные, моделирующие задачу предиктивного
        обслуживания оборудования. Состоит из 10000 записей, каждая из
        которых описывает состояние оборудования и включает 14 признаков:
        1. Переменные (Features)
        - UID (идентификатор записи);
        - Product ID (идентификатор продукта);
        - Type (тип продукта: L, M или H);
        - Air temperature (температура окр. среды, [К] );
        - Process temperature (рабочая температура процесса,[К] ); 
        - Rotational speed (скорость вращения, [об/мин] );
        - Torque (крутящий момент, [Н*м] );
        - Tool wear [min] (износ инструмента, [мин] ).

        2. Целевые переменные (Targets)  
        - Machine failure (бинарная метка о наличии или отсутствии отказа 
        оборудования);
        - TWF (отказ из-за износа инструмента);
        - HDF (отказ из-за недостаточного теплоотвода);
        - PWF (отказ из-за недостаточной или избыточной мощности);
        - OSF (отказ из-за перегрузки); 
        - RNF (случайный отказ).
        """,

        """
        ## Этапы проекта 
        1. Загрузка данных. 
        2. Предобработка данных. 
        3. Обучение моделей:
        - Logistic Regression;
        - Random Forest; 
        - Gradient Boosting (XGBoost);
        - Support Vector Machine (SVM);
        4. Оценка моделей и выбор наиболее
        оптимальной по взвешенной сумме метрик. 
        5. Визуализация результатов.
        """,

        """
        ## Предобработка данных
        1. Удаление лишних столбцов: убираются столбцы, которые не несут полезной
        информации (в данном случае, удаляются следующие столбцы: 
        'UDI', 'Product ID', 'TWF', 'HDF', 'PWF', 'OSF', 'RNF').
        2. Преобразование категориальных данных: модели машинного обучения
        работают только с числами, поэтому категориальные переменные нужно 
        преобразовать в числовой формат. Для переменной Type преобразование имеет следующий вид: 
        L -> 0, M -> 1, H -> 2.
        3. Обработка пропущенных значений: Пропуски в данных могут нарушить работу
        модели, поэтому их нужно либо удалить, либо заполнить.
        4. Масштабирование данных: Числовые признаки (такие, как температура,
        скорость вращения) масштабируются для улучшения сходимости модели.
        """,

        """
        ## Обучение модели
        1. Разделение данных
        - разделение данных на признаки (X), используемые для обучения модели, и целевые 
        переменные (y), которые модель должна предсказать (в данном случае y = Traget);
        - разделение данных на обучающую и тестовую выборки в соотношении 80/20.

        2. Наиболее оптимальный алгоритм - Gradient Boosting (XGBoost), преимуществами которого являются:
        - высокая точность на сложных данных;
        - поддержка регуляризации для предотвращения переобучения.
        """,

        """
        ## Визуализация результатов (интерфейс пользователя)
        1. Ввод с клавиатуры следующих значений:
        - тип (L,M.H);
        - температура воздуха и процесса;
        - скорость вращения;
        - крутящий момент;
        - износ инструмента.

        2.После ввода отображаются следующие параметры:
        - класс (0 или 1);
        - вероятность отказа (0 или 1).

        """,

        """
        ## Результаты

        | Наим. модели / метрики | Accuracy | ROC-AUC | F1-Score | Взвешенная сумма метрик |
        |------------------------|----------|---------|----------|-------------------------|
        | Random Forest          | 0.984    | 0.793   | 0.692    | 0.820                   |
        | Logistic Regression    | 0.973    | 0.629   | 0.372    | 0.655                   |
        | XGBoost                | 0.987    | 0.850   | 0.768    | 0.867                   |
        | SVM                    | 0.970    | 0.500   | 0.000    | 0.491                   |
        """,

        """
        ## Заключение 
        1. Разработанная модель успешно идентифицирует отказы
        оборудования.
        2. Возможны следующие улучшения системы:
        - добавление deep learning (LSTM для временных рядов);
        - использование данной модели для синтеза регулятора скорости 
        вращения инструмента (например, для вычисления различных 
        наборов коэффициентов ПИД-регулятора в зависимости от режима работы 
        оборудования); 
        - добавление в датасет частотных характеристик инструмента       
        (ЛАХ, ЛФХ и т.д) для оценки запасов устойчивости оборудования. 
        """
    ]

    # Отображение текущего слайда
    with st.container():
        st.markdown(slides[st.session_state.slide], unsafe_allow_html=True)

        # Навигация
        col1, col2, col3 = st.columns([1, 1, 1])
        with col1:
            if st.button("← Назад") and st.session_state.slide > 0:
                st.session_state.slide -= 1
        with col2:
            st.write(f"Слайд {st.session_state.slide + 1}/{len(slides)}")
        with col3:
            if st.button("Вперед →") and st.session_state.slide < len(slides) - 1:
                st.session_state.slide += 1

    # Стилизация
    st.markdown("""
    <style>
    /* Убираем лишние пробелы */
    .stApp { margin-top: -50px; }
    /* Стили для кнопок */
    .stButton>button {
        width: 100%;
        border-radius: 5px;
        padding: 10px;
    }
    </style>
    """, unsafe_allow_html=True)